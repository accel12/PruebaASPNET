//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PruebaDBEntities : DbContext
    {
        public PruebaDBEntities()
            : base("name=PruebaDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<MOV_INVENTARIO> MOV_INVENTARIO { get; set; }
    
        public virtual ObjectResult<Consultar_Result> Consultar(Nullable<int> nRO_DOCUMENTO, string uSUARIO)
        {
            var nRO_DOCUMENTOParameter = nRO_DOCUMENTO.HasValue ?
                new ObjectParameter("NRO_DOCUMENTO", nRO_DOCUMENTO) :
                new ObjectParameter("NRO_DOCUMENTO", typeof(int));
    
            var uSUARIOParameter = uSUARIO != null ?
                new ObjectParameter("USUARIO", uSUARIO) :
                new ObjectParameter("USUARIO", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Consultar_Result>("Consultar", nRO_DOCUMENTOParameter, uSUARIOParameter);
        }
    
        public virtual int ACTUALIZAR(string uSUARIO, string tIPO_DOCUMENTO, string nRO_DOCUMENTO, string cANTIDAD, string fECHA_TRANSACCION, string sALDO_FINAL)
        {
            var uSUARIOParameter = uSUARIO != null ?
                new ObjectParameter("USUARIO", uSUARIO) :
                new ObjectParameter("USUARIO", typeof(string));
    
            var tIPO_DOCUMENTOParameter = tIPO_DOCUMENTO != null ?
                new ObjectParameter("TIPO_DOCUMENTO", tIPO_DOCUMENTO) :
                new ObjectParameter("TIPO_DOCUMENTO", typeof(string));
    
            var nRO_DOCUMENTOParameter = nRO_DOCUMENTO != null ?
                new ObjectParameter("NRO_DOCUMENTO", nRO_DOCUMENTO) :
                new ObjectParameter("NRO_DOCUMENTO", typeof(string));
    
            var cANTIDADParameter = cANTIDAD != null ?
                new ObjectParameter("CANTIDAD", cANTIDAD) :
                new ObjectParameter("CANTIDAD", typeof(string));
    
            var fECHA_TRANSACCIONParameter = fECHA_TRANSACCION != null ?
                new ObjectParameter("FECHA_TRANSACCION", fECHA_TRANSACCION) :
                new ObjectParameter("FECHA_TRANSACCION", typeof(string));
    
            var sALDO_FINALParameter = sALDO_FINAL != null ?
                new ObjectParameter("SALDO_FINAL", sALDO_FINAL) :
                new ObjectParameter("SALDO_FINAL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ACTUALIZAR", uSUARIOParameter, tIPO_DOCUMENTOParameter, nRO_DOCUMENTOParameter, cANTIDADParameter, fECHA_TRANSACCIONParameter, sALDO_FINALParameter);
        }
    
        public virtual int AGREGAR(string uSUARIO, string tIPO_DOCUMENTO, string nRO_DOCUMENTO, string cANTIDAD, string fECHA_TRANSACCION, string sALDO_FINAL)
        {
            var uSUARIOParameter = uSUARIO != null ?
                new ObjectParameter("USUARIO", uSUARIO) :
                new ObjectParameter("USUARIO", typeof(string));
    
            var tIPO_DOCUMENTOParameter = tIPO_DOCUMENTO != null ?
                new ObjectParameter("TIPO_DOCUMENTO", tIPO_DOCUMENTO) :
                new ObjectParameter("TIPO_DOCUMENTO", typeof(string));
    
            var nRO_DOCUMENTOParameter = nRO_DOCUMENTO != null ?
                new ObjectParameter("NRO_DOCUMENTO", nRO_DOCUMENTO) :
                new ObjectParameter("NRO_DOCUMENTO", typeof(string));
    
            var cANTIDADParameter = cANTIDAD != null ?
                new ObjectParameter("CANTIDAD", cANTIDAD) :
                new ObjectParameter("CANTIDAD", typeof(string));
    
            var fECHA_TRANSACCIONParameter = fECHA_TRANSACCION != null ?
                new ObjectParameter("FECHA_TRANSACCION", fECHA_TRANSACCION) :
                new ObjectParameter("FECHA_TRANSACCION", typeof(string));
    
            var sALDO_FINALParameter = sALDO_FINAL != null ?
                new ObjectParameter("SALDO_FINAL", sALDO_FINAL) :
                new ObjectParameter("SALDO_FINAL", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AGREGAR", uSUARIOParameter, tIPO_DOCUMENTOParameter, nRO_DOCUMENTOParameter, cANTIDADParameter, fECHA_TRANSACCIONParameter, sALDO_FINALParameter);
        }
    }
}
